// This is the build file for the CSS Lab web site.  The four main tasks of
// interest are build_dev, build_prod, run_local_server, and clean.  Please see
// their individual comments for details (near the bottom of this file).
//
// Normally you would use just the run_local_server task during development and
// the build_prod task before committing to git and pushing to GitHub.  build_dev
// is called by serve, and clean is called by build_dev and build_prod.

var gulp = require('gulp');                       // http://gulpjs.com
var autoprefixer = require('gulp-autoprefixer');  // https://www.npmjs.org/package/gulp-autoprefixer
var connect = require('gulp-connect');            // https://www.npmjs.org/package/gulp-connect
var coffee = require('gulp-coffee');              // https://www.npmjs.org/package/gulp-coffee/
var del = require('del');                         // https://www.npmjs.org/package/del
var gutil = require('gulp-util');                 // https://github.com/gulpjs/gulp-util
var minifyCSS = require('gulp-minify-css');       // https://www.npmjs.org/package/gulp-minify-css
var runSequence = require('run-sequence');        // https://www.npmjs.org/package/run-sequence
var sass = require('gulp-sass');                  // https://www.npmjs.org/package/gulp-sass
var uglify = require('gulp-uglify');              // https://www.npmjs.org/package/gulp-uglify

// src/scss/*.scss | sass | autoprefixer | .tmp/css/*.css
gulp.task('css:dev', function() {
  return gulp.src('src/scss/*.scss')
    .pipe(sass())
    .pipe(autoprefixer())
    .pipe(gulp.dest('.tmp/css'));
});

// src/scss/*.scss | sass | autoprefixer | minify | .tmp/css/*.css
gulp.task('css:prod', function() {
  return gulp.src('src/scss/*.scss')
    .pipe(sass())
    .pipe(autoprefixer())
    .pipe(minifyCSS())
    .pipe(gulp.dest('.tmp/css'));
});

// src/coffeescript/*.coffee | coffee | .tmp/javascript/*.js
gulp.task('coffee:dev', function() {
  return gulp.src('src/coffeescript/*.coffee')
    .pipe(coffee().on('error', gutil.log))
    .pipe(gulp.dest('.tmp/javascript'));
});

// src/coffeescript/*.coffee | coffee | uglify | .tmp/javascript/*.js
gulp.task('coffee:prod', function() {
  return gulp.src('src/coffeescript/*.coffee')
    .pipe(coffee().on('error', gutil.log))
    .pipe(uglify())
    .pipe(gulp.dest('.tmp/javascript'));
});

// src/javascript/*.js | .tmp/javascript/*.js
gulp.task('js:dev', function() {
  return gulp.src('src/javascript/*.js')
    .pipe(gulp.dest('.tmp/javascript'));
});

// src/javascript/*.js | uglify | .tmp/javascript/*.js
gulp.task('js:prod', function() {
  return gulp.src('src/javascript/*.js')
    .pipe(uglify())
    .pipe(gulp.dest('.tmp/javascript'));
});

// src/**/*.html | .tmp/**/*.html
gulp.task('html', function() {
  return gulp.src('src/**/*.html')
    .pipe(gulp.dest('.tmp/'));
});

// .tmp/**/*.html | ./**/*.html
gulp.task('install:dev', function() {
  return gulp.src('.tmp/**')
    .pipe(gulp.dest('./'));
});

// .tmp/**/*.html | ./**/*.html
gulp.task('install:prod', function() {
  return gulp.src('.tmp/**')
    .pipe(gulp.dest('./'));
});

// Tell the browser to refresh the css or the entire page.
gulp.task('refresh_browser', function() {
  gulp.src('src/**/*')      // So that connect.reload() is called within a pipe?
    .pipe(connect.reload());
});

// Build the site assets while doing development.
gulp.task('build_dev', function(done) {
  runSequence('clean', 'css:dev', 'coffee:dev', 'js:dev', 'html', 'install:dev', done);
});

// Build the site assets prior to deploying to production.  Same as build_dev
// except that CSS and JS are minified.
gulp.task('build_prod', function(done) {
  runSequence('clean', 'css:prod', 'coffee:prod', 'js:prod', 'html', 'install:prod', done)
});

// Launch a webserver that servers the site at localhost:8000.  Also,
// automatically run the build_dev task when any of the site source files
// change and then tell the browser to refresh itself.
gulp.task('run_local_server', function() {
  connect.server({port: 8000, livereload: true});
  gulp.watch(['src/**/*'], function() {
    runSequence('build_dev', 'refresh_browser');
  });
});

// Remove all intermediate and output files generated by either the build_dev
// or build_prod task.
gulp.task('clean', function(done) {
  del.sync(['.tmp', 'html', 'javascript', 'css', 'index.html']);
  done();
});
